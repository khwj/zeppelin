name: build

on:
  push:

env:
  # Disable keepAlive and pool
  # https://github.com/actions/virtual-environments/issues/1499#issuecomment-689467080
  MAVEN_OPTS: >-
    -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
    -Dhttp.keepAlive=false
    -Dmaven.wagon.http.pool=false
    -Dmaven.wagon.http.retryHandler.count=3
  MAVEN_ARGS: >-
    -B --no-transfer-progress
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: "true"
  SPARK_LOCAL_IP: 127.0.0.1
  ZEPPELIN_LOCAL_IP: 127.0.0.1

# Use the bash login, because we are using miniconda
defaults:
  run:
    shell: bash -l {0}

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  spark-test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python: [3.7]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: 8
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
            ~/.spark-dist
            ~/.cache
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          mirrors: '[{"id": "maven-default-http-blocker", "name": "Pseudo repository to mirror external repositories initially using HTTP.", "mirrorOf": "external:http:*", "url": "http://0.0.0.0/"}]'
      - name: install environment
        run: ./mvnw install -DskipRat -DskipTests -pl spark-submit,spark/scala-2.12 -am -Phadoop3 ${MAVEN_ARGS}
      - name: Setup conda environment with python ${{ matrix.python }} and R
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: python_3_with_R
          environment-file: testing/env_python_${{ matrix.python }}_with_R.yml
          python-version: ${{ matrix.python }}
          miniforge-variant: Mambaforge
          channels: conda-forge,defaults
          channel-priority: true
          auto-activate-base: false
          use-mamba: true
      - name: Make IRkernel available to Jupyter
        run: |
          R -e "IRkernel::installspec()"
      - name: Build Zeppelin Binary 
        run: |
          echo "unsafe-perm=true" > ~/.npmrc
          echo '{ "allow_root": true }' > ~/.bowerrc
          ./mvnw -B package -DskipTests -DskipRat -Pbuild-distr -Pspark-3.2 -Pinclude-hadoop -Phadoop3 -Pspark-scala-2.12 -Pweb-angular -Pweb-dist -am -pl zeppelin-interpreter-integration,zeppelin-web,spark-submit,spark/spark-dependencies,markdown,shell